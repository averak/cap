package net.averak.cap.adapter.dao.entity.base;

import java.util.ArrayList;
import java.util.List;

public class ProjectExample {
    /**
     * This field was generated by MyBatis Generator. This field corresponds to the database table
     * project
     *
     * @mbg.generated
     */
    protected String orderByClause;

    /**
     * This field was generated by MyBatis Generator. This field corresponds to the database table
     * project
     *
     * @mbg.generated
     */
    protected boolean distinct;

    /**
     * This field was generated by MyBatis Generator. This field corresponds to the database table
     * project
     *
     * @mbg.generated
     */
    protected List<Criteria> oredCriteria;

    /**
     * This method was generated by MyBatis Generator. This method corresponds to the database table
     * project
     *
     * @mbg.generated
     */
    public ProjectExample() {
        oredCriteria = new ArrayList<>();
    }

    /**
     * This method was generated by MyBatis Generator. This method corresponds to the database table
     * project
     *
     * @mbg.generated
     */
    public void setOrderByClause(String orderByClause) {
        this.orderByClause = orderByClause;
    }

    /**
     * This method was generated by MyBatis Generator. This method corresponds to the database table
     * project
     *
     * @mbg.generated
     */
    public String getOrderByClause() {
        return orderByClause;
    }

    /**
     * This method was generated by MyBatis Generator. This method corresponds to the database table
     * project
     *
     * @mbg.generated
     */
    public void setDistinct(boolean distinct) {
        this.distinct = distinct;
    }

    /**
     * This method was generated by MyBatis Generator. This method corresponds to the database table
     * project
     *
     * @mbg.generated
     */
    public boolean isDistinct() {
        return distinct;
    }

    /**
     * This method was generated by MyBatis Generator. This method corresponds to the database table
     * project
     *
     * @mbg.generated
     */
    public List<Criteria> getOredCriteria() {
        return oredCriteria;
    }

    /**
     * This method was generated by MyBatis Generator. This method corresponds to the database table
     * project
     *
     * @mbg.generated
     */
    public void or(Criteria criteria) {
        oredCriteria.add(criteria);
    }

    /**
     * This method was generated by MyBatis Generator. This method corresponds to the database table
     * project
     *
     * @mbg.generated
     */
    public Criteria or() {
        Criteria criteria = createCriteriaInternal();
        oredCriteria.add(criteria);
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator. This method corresponds to the database table
     * project
     *
     * @mbg.generated
     */
    public Criteria createCriteria() {
        Criteria criteria = createCriteriaInternal();
        if (oredCriteria.size() == 0) {
            oredCriteria.add(criteria);
        }
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator. This method corresponds to the database table
     * project
     *
     * @mbg.generated
     */
    protected Criteria createCriteriaInternal() {
        Criteria criteria = new Criteria();
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator. This method corresponds to the database table
     * project
     *
     * @mbg.generated
     */
    public void clear() {
        oredCriteria.clear();
        orderByClause = null;
        distinct = false;
    }

    /**
     * This class was generated by MyBatis Generator. This class corresponds to the database table
     * project
     *
     * @mbg.generated
     */
    protected abstract static class GeneratedCriteria {
        protected List<Criterion> criteria;

        protected GeneratedCriteria() {
            super();
            criteria = new ArrayList<>();
        }

        public boolean isValid() {
            return criteria.size() > 0;
        }

        public List<Criterion> getAllCriteria() {
            return criteria;
        }

        public List<Criterion> getCriteria() {
            return criteria;
        }

        protected void addCriterion(String condition) {
            if (condition == null) {
                throw new RuntimeException("Value for condition cannot be null");
            }
            criteria.add(new Criterion(condition));
        }

        protected void addCriterion(String condition, Object value, String property) {
            if (value == null) {
                throw new RuntimeException("Value for " + property + " cannot be null");
            }
            criteria.add(new Criterion(condition, value));
        }

        protected void addCriterion(String condition, Object value1, Object value2, String property) {
            if (value1 == null || value2 == null) {
                throw new RuntimeException("Between values for " + property + " cannot be null");
            }
            criteria.add(new Criterion(condition, value1, value2));
        }

        public Criteria andIdIsNull() {
            addCriterion("`id` is null");
            return (Criteria) this;
        }

        public Criteria andIdIsNotNull() {
            addCriterion("`id` is not null");
            return (Criteria) this;
        }

        public Criteria andIdEqualTo(String value) {
            addCriterion("`id` =", value, "id");
            return (Criteria) this;
        }

        public Criteria andIdNotEqualTo(String value) {
            addCriterion("`id` <>", value, "id");
            return (Criteria) this;
        }

        public Criteria andIdGreaterThan(String value) {
            addCriterion("`id` >", value, "id");
            return (Criteria) this;
        }

        public Criteria andIdGreaterThanOrEqualTo(String value) {
            addCriterion("`id` >=", value, "id");
            return (Criteria) this;
        }

        public Criteria andIdLessThan(String value) {
            addCriterion("`id` <", value, "id");
            return (Criteria) this;
        }

        public Criteria andIdLessThanOrEqualTo(String value) {
            addCriterion("`id` <=", value, "id");
            return (Criteria) this;
        }

        public Criteria andIdLike(String value) {
            addCriterion("`id` like", value, "id");
            return (Criteria) this;
        }

        public Criteria andIdNotLike(String value) {
            addCriterion("`id` not like", value, "id");
            return (Criteria) this;
        }

        public Criteria andIdIn(List<String> values) {
            addCriterion("`id` in", values, "id");
            return (Criteria) this;
        }

        public Criteria andIdNotIn(List<String> values) {
            addCriterion("`id` not in", values, "id");
            return (Criteria) this;
        }

        public Criteria andIdBetween(String value1, String value2) {
            addCriterion("`id` between", value1, value2, "id");
            return (Criteria) this;
        }

        public Criteria andIdNotBetween(String value1, String value2) {
            addCriterion("`id` not between", value1, value2, "id");
            return (Criteria) this;
        }

        public Criteria andNameIsNull() {
            addCriterion("`name` is null");
            return (Criteria) this;
        }

        public Criteria andNameIsNotNull() {
            addCriterion("`name` is not null");
            return (Criteria) this;
        }

        public Criteria andNameEqualTo(String value) {
            addCriterion("`name` =", value, "name");
            return (Criteria) this;
        }

        public Criteria andNameNotEqualTo(String value) {
            addCriterion("`name` <>", value, "name");
            return (Criteria) this;
        }

        public Criteria andNameGreaterThan(String value) {
            addCriterion("`name` >", value, "name");
            return (Criteria) this;
        }

        public Criteria andNameGreaterThanOrEqualTo(String value) {
            addCriterion("`name` >=", value, "name");
            return (Criteria) this;
        }

        public Criteria andNameLessThan(String value) {
            addCriterion("`name` <", value, "name");
            return (Criteria) this;
        }

        public Criteria andNameLessThanOrEqualTo(String value) {
            addCriterion("`name` <=", value, "name");
            return (Criteria) this;
        }

        public Criteria andNameLike(String value) {
            addCriterion("`name` like", value, "name");
            return (Criteria) this;
        }

        public Criteria andNameNotLike(String value) {
            addCriterion("`name` not like", value, "name");
            return (Criteria) this;
        }

        public Criteria andNameIn(List<String> values) {
            addCriterion("`name` in", values, "name");
            return (Criteria) this;
        }

        public Criteria andNameNotIn(List<String> values) {
            addCriterion("`name` not in", values, "name");
            return (Criteria) this;
        }

        public Criteria andNameBetween(String value1, String value2) {
            addCriterion("`name` between", value1, value2, "name");
            return (Criteria) this;
        }

        public Criteria andNameNotBetween(String value1, String value2) {
            addCriterion("`name` not between", value1, value2, "name");
            return (Criteria) this;
        }

        public Criteria andDockerImageUrlIsNull() {
            addCriterion("`docker_image_url` is null");
            return (Criteria) this;
        }

        public Criteria andDockerImageUrlIsNotNull() {
            addCriterion("`docker_image_url` is not null");
            return (Criteria) this;
        }

        public Criteria andDockerImageUrlEqualTo(String value) {
            addCriterion("`docker_image_url` =", value, "dockerImageUrl");
            return (Criteria) this;
        }

        public Criteria andDockerImageUrlNotEqualTo(String value) {
            addCriterion("`docker_image_url` <>", value, "dockerImageUrl");
            return (Criteria) this;
        }

        public Criteria andDockerImageUrlGreaterThan(String value) {
            addCriterion("`docker_image_url` >", value, "dockerImageUrl");
            return (Criteria) this;
        }

        public Criteria andDockerImageUrlGreaterThanOrEqualTo(String value) {
            addCriterion("`docker_image_url` >=", value, "dockerImageUrl");
            return (Criteria) this;
        }

        public Criteria andDockerImageUrlLessThan(String value) {
            addCriterion("`docker_image_url` <", value, "dockerImageUrl");
            return (Criteria) this;
        }

        public Criteria andDockerImageUrlLessThanOrEqualTo(String value) {
            addCriterion("`docker_image_url` <=", value, "dockerImageUrl");
            return (Criteria) this;
        }

        public Criteria andDockerImageUrlLike(String value) {
            addCriterion("`docker_image_url` like", value, "dockerImageUrl");
            return (Criteria) this;
        }

        public Criteria andDockerImageUrlNotLike(String value) {
            addCriterion("`docker_image_url` not like", value, "dockerImageUrl");
            return (Criteria) this;
        }

        public Criteria andDockerImageUrlIn(List<String> values) {
            addCriterion("`docker_image_url` in", values, "dockerImageUrl");
            return (Criteria) this;
        }

        public Criteria andDockerImageUrlNotIn(List<String> values) {
            addCriterion("`docker_image_url` not in", values, "dockerImageUrl");
            return (Criteria) this;
        }

        public Criteria andDockerImageUrlBetween(String value1, String value2) {
            addCriterion("`docker_image_url` between", value1, value2, "dockerImageUrl");
            return (Criteria) this;
        }

        public Criteria andDockerImageUrlNotBetween(String value1, String value2) {
            addCriterion("`docker_image_url` not between", value1, value2, "dockerImageUrl");
            return (Criteria) this;
        }

        public Criteria andDockerImageTagIsNull() {
            addCriterion("`docker_image_tag` is null");
            return (Criteria) this;
        }

        public Criteria andDockerImageTagIsNotNull() {
            addCriterion("`docker_image_tag` is not null");
            return (Criteria) this;
        }

        public Criteria andDockerImageTagEqualTo(String value) {
            addCriterion("`docker_image_tag` =", value, "dockerImageTag");
            return (Criteria) this;
        }

        public Criteria andDockerImageTagNotEqualTo(String value) {
            addCriterion("`docker_image_tag` <>", value, "dockerImageTag");
            return (Criteria) this;
        }

        public Criteria andDockerImageTagGreaterThan(String value) {
            addCriterion("`docker_image_tag` >", value, "dockerImageTag");
            return (Criteria) this;
        }

        public Criteria andDockerImageTagGreaterThanOrEqualTo(String value) {
            addCriterion("`docker_image_tag` >=", value, "dockerImageTag");
            return (Criteria) this;
        }

        public Criteria andDockerImageTagLessThan(String value) {
            addCriterion("`docker_image_tag` <", value, "dockerImageTag");
            return (Criteria) this;
        }

        public Criteria andDockerImageTagLessThanOrEqualTo(String value) {
            addCriterion("`docker_image_tag` <=", value, "dockerImageTag");
            return (Criteria) this;
        }

        public Criteria andDockerImageTagLike(String value) {
            addCriterion("`docker_image_tag` like", value, "dockerImageTag");
            return (Criteria) this;
        }

        public Criteria andDockerImageTagNotLike(String value) {
            addCriterion("`docker_image_tag` not like", value, "dockerImageTag");
            return (Criteria) this;
        }

        public Criteria andDockerImageTagIn(List<String> values) {
            addCriterion("`docker_image_tag` in", values, "dockerImageTag");
            return (Criteria) this;
        }

        public Criteria andDockerImageTagNotIn(List<String> values) {
            addCriterion("`docker_image_tag` not in", values, "dockerImageTag");
            return (Criteria) this;
        }

        public Criteria andDockerImageTagBetween(String value1, String value2) {
            addCriterion("`docker_image_tag` between", value1, value2, "dockerImageTag");
            return (Criteria) this;
        }

        public Criteria andDockerImageTagNotBetween(String value1, String value2) {
            addCriterion("`docker_image_tag` not between", value1, value2, "dockerImageTag");
            return (Criteria) this;
        }

        public Criteria andContainerPortIsNull() {
            addCriterion("`container_port` is null");
            return (Criteria) this;
        }

        public Criteria andContainerPortIsNotNull() {
            addCriterion("`container_port` is not null");
            return (Criteria) this;
        }

        public Criteria andContainerPortEqualTo(Integer value) {
            addCriterion("`container_port` =", value, "containerPort");
            return (Criteria) this;
        }

        public Criteria andContainerPortNotEqualTo(Integer value) {
            addCriterion("`container_port` <>", value, "containerPort");
            return (Criteria) this;
        }

        public Criteria andContainerPortGreaterThan(Integer value) {
            addCriterion("`container_port` >", value, "containerPort");
            return (Criteria) this;
        }

        public Criteria andContainerPortGreaterThanOrEqualTo(Integer value) {
            addCriterion("`container_port` >=", value, "containerPort");
            return (Criteria) this;
        }

        public Criteria andContainerPortLessThan(Integer value) {
            addCriterion("`container_port` <", value, "containerPort");
            return (Criteria) this;
        }

        public Criteria andContainerPortLessThanOrEqualTo(Integer value) {
            addCriterion("`container_port` <=", value, "containerPort");
            return (Criteria) this;
        }

        public Criteria andContainerPortIn(List<Integer> values) {
            addCriterion("`container_port` in", values, "containerPort");
            return (Criteria) this;
        }

        public Criteria andContainerPortNotIn(List<Integer> values) {
            addCriterion("`container_port` not in", values, "containerPort");
            return (Criteria) this;
        }

        public Criteria andContainerPortBetween(Integer value1, Integer value2) {
            addCriterion("`container_port` between", value1, value2, "containerPort");
            return (Criteria) this;
        }

        public Criteria andContainerPortNotBetween(Integer value1, Integer value2) {
            addCriterion("`container_port` not between", value1, value2, "containerPort");
            return (Criteria) this;
        }

        public Criteria andHostPortIsNull() {
            addCriterion("`host_port` is null");
            return (Criteria) this;
        }

        public Criteria andHostPortIsNotNull() {
            addCriterion("`host_port` is not null");
            return (Criteria) this;
        }

        public Criteria andHostPortEqualTo(Integer value) {
            addCriterion("`host_port` =", value, "hostPort");
            return (Criteria) this;
        }

        public Criteria andHostPortNotEqualTo(Integer value) {
            addCriterion("`host_port` <>", value, "hostPort");
            return (Criteria) this;
        }

        public Criteria andHostPortGreaterThan(Integer value) {
            addCriterion("`host_port` >", value, "hostPort");
            return (Criteria) this;
        }

        public Criteria andHostPortGreaterThanOrEqualTo(Integer value) {
            addCriterion("`host_port` >=", value, "hostPort");
            return (Criteria) this;
        }

        public Criteria andHostPortLessThan(Integer value) {
            addCriterion("`host_port` <", value, "hostPort");
            return (Criteria) this;
        }

        public Criteria andHostPortLessThanOrEqualTo(Integer value) {
            addCriterion("`host_port` <=", value, "hostPort");
            return (Criteria) this;
        }

        public Criteria andHostPortIn(List<Integer> values) {
            addCriterion("`host_port` in", values, "hostPort");
            return (Criteria) this;
        }

        public Criteria andHostPortNotIn(List<Integer> values) {
            addCriterion("`host_port` not in", values, "hostPort");
            return (Criteria) this;
        }

        public Criteria andHostPortBetween(Integer value1, Integer value2) {
            addCriterion("`host_port` between", value1, value2, "hostPort");
            return (Criteria) this;
        }

        public Criteria andHostPortNotBetween(Integer value1, Integer value2) {
            addCriterion("`host_port` not between", value1, value2, "hostPort");
            return (Criteria) this;
        }
    }

    /**
     * This class was generated by MyBatis Generator. This class corresponds to the database table
     * project
     *
     * @mbg.generated do_not_delete_during_merge
     */
    public static class Criteria extends GeneratedCriteria {
        protected Criteria() {
            super();
        }
    }

    /**
     * This class was generated by MyBatis Generator. This class corresponds to the database table
     * project
     *
     * @mbg.generated
     */
    public static class Criterion {
        private String condition;

        private Object value;

        private Object secondValue;

        private boolean noValue;

        private boolean singleValue;

        private boolean betweenValue;

        private boolean listValue;

        private String typeHandler;

        public String getCondition() {
            return condition;
        }

        public Object getValue() {
            return value;
        }

        public Object getSecondValue() {
            return secondValue;
        }

        public boolean isNoValue() {
            return noValue;
        }

        public boolean isSingleValue() {
            return singleValue;
        }

        public boolean isBetweenValue() {
            return betweenValue;
        }

        public boolean isListValue() {
            return listValue;
        }

        public String getTypeHandler() {
            return typeHandler;
        }

        protected Criterion(String condition) {
            super();
            this.condition = condition;
            this.typeHandler = null;
            this.noValue = true;
        }

        protected Criterion(String condition, Object value, String typeHandler) {
            super();
            this.condition = condition;
            this.value = value;
            this.typeHandler = typeHandler;
            if (value instanceof List<?>) {
                this.listValue = true;
            } else {
                this.singleValue = true;
            }
        }

        protected Criterion(String condition, Object value) {
            this(condition, value, null);
        }

        protected Criterion(String condition, Object value, Object secondValue, String typeHandler) {
            super();
            this.condition = condition;
            this.value = value;
            this.secondValue = secondValue;
            this.typeHandler = typeHandler;
            this.betweenValue = true;
        }

        protected Criterion(String condition, Object value, Object secondValue) {
            this(condition, value, secondValue, null);
        }
    }
}
